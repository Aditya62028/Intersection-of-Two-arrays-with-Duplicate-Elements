import java.io.*;
import java.util.*;
class GFG{
    public static void main(String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine().trim());
        while (t-- > 0){
            String[] str1 = br.readLine().trim().split(" ");
            int n = str1.length;
            int[] a = new int[n];
            for (int i = 0; i < n; i++){
                a[i] = Integer.parseInt(str1[i]); 
            }
            String[] str2 = br.readLine().trim().split(" "); 
            int m = str2.length;
            int[] b = new int[m];
            for (int i = 0; i < m; i++){
                b[i] = Integer.parseInt(str2[i]);
            }
            Solution sol = new Solution();
            ArrayList<Integer> res = sol.intersectionWithDuplicates(a, b);
            Collections.sort(res);
            if (res.isEmpty()){
                System.out.println("[]");
            } else {
                for (int num : res){
                    System.out.print(num + " ");
                }
                System.out.println();
            }
            System.out.println("~");
        }
    }
}
class Solution{
    public ArrayList<Integer> intersectionWithDuplicates(int[] a, int[] b){
        HashSet<Integer> hm=new HashSet<>();
        ArrayList<Integer> arr=new ArrayList<>();
        for(int i=0;i<a.length;i++){
            hm.add(a[i]);
        }
        for(int i=0;i<b.length;i++){
            if(hm.contains(b[i])){
                arr.add(b[i]);
                hm.remove(b[i]);
            }
        }
        return arr;
    }
}
